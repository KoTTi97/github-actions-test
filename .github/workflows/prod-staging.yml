name: Lint and Deploy to Vercel for Production and Staging

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - staging
      - main

jobs:

  run-script:
    runs-on: self-hosted
    steps:
    - name: Run Shell Script
      id: run-script
      run: |
        output=$(../../dummy-script.sh)
        echo "$output"
    - name: Get the Captured Output
      run: |
        captured_output="${{ steps.run-script.outputs.my_output }}"
        echo "The captured output is: $captured_output"

#  lint:
#    name: Run Linting
#    #runs-on: ubuntu-latest
#    runs-on: self-hosted
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Setup Node
#        uses: actions/setup-node@v2
#        with:
#          node-version: 18
#      - name: Install Dependencies
#        working-directory: ./app
#        run: pnpm install
#      - name: Run type checking
#        working-directory: ./app
#        run: pnpm check-types
#      - name: Run ESLint
#        working-directory: ./app
#        run: pnpm eslint
#
#  deploy-staging:
#    name: Deploy Staging to Vercel
#    needs: lint
#    if: github.ref == 'refs/heads/staging'
#    runs-on: self-hosted
#    environment: staging
#    steps:
#      - uses: actions/checkout@v2
#      - name: Print environment specific variable
#        run: echo "${{ vars.TEST_ENVIRONMENT_VARIABLE }}"
#      - name: Install Vercel CLI
#        working-directory: ./app
#        run: npm install --global vercel@latest
#      - name: Pull Vercel Environment Information
#        working-directory: ./app
#        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
#      - name: Build Project Artifacts
#        working-directory: ./app
#        run: vercel build --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
#      - name: Deploy to Vercel
#        working-directory: ./app
#        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
#
#  deploy-production:
#    name: Deploy Production to Vercel
#    needs: lint
#    if: github.ref == 'refs/heads/main'
#    runs-on: self-hosted
#    environment: production
#    steps:
#      - uses: actions/checkout@v2
#      - name: Print environment specific variable
#        run: echo "${{ vars.TEST_ENVIRONMENT_VARIABLE }}"
#      - name: Install Vercel CLI
#        working-directory: ./app
#        run: npm install --global vercel@latest
#      - name: Pull Vercel Environment Information
#        working-directory: ./app
#        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
#      - name: Build Project Artifacts
#        working-directory: ./app
#        run: vercel build --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
#      - name: Deploy to Vercel
#        working-directory: ./app
#        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_ACCESS_TOKEN }}
